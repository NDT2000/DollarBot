# This workflow will install Python dependencies, run tests and lint, and check for code coverage with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: ["release-1.0" ]
  pull_request:
    branches: ["release-1.0" ]

permissions:
  contents: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install pylint
      run: |
        pip install pylint

    - name: Run PyLint with dynamic badge
      uses: Silleellie/pylint-github-action@v2
      with:
        lint-path: "flask_dollarbot/endpoints"  # Badge will be based on this path
        python-version: "3.10"

    - name: Run PyLint on multiple paths
      run: |
        pylint flask_dollarbot/endpoints flask_dollarbot/tests || true  # Runs pylint on both paths

    - name: Test with pytest in dollarbot root
      env:
        PYTHONPATH: ${{ github.workspace }}/dollarbot:$(pwd)/DollarBot  # Set PYTHONPATH for dollarbot root
      run: |
        pip install coverage
        export PYTHONPATH=$(pwd)/DollarBot  # Also set in local environment
        coverage run -m pytest test/

    - name: Test with pytest in flask_dollarbot root
      working-directory: flask_dollarbot  # Navigate to flask_dollarbot as the root directory
      env:
        PYTHONPATH: /home/runner/work/DollarBot/flask_dollarbot:$(pwd)/flask_dollarbot  # Full path to flask_dollarbot
      run: |
        export PYTHONPATH=$(pwd):$PYTHONPATH  # Ensures that flask_dollarbot is part of PYTHONPATH in the local environment
        coverage run -m pytest tests/
        pip install pytest pytest-cov
        pytest --cov --cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        env_vars: OS,PYTHON
